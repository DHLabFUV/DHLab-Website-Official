{"ast":null,"code":"var _jsxFileName = \"/Users/phamdoanphuonganh/Desktop/DHLab/dhlab-web/src/frontend/navbar/navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const menuRef = useRef(null);\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  const handleOutsideClick = event => {\n    // Close the menu if it's open and the click is outside of the menu\n    if (isMenuOpen && menuRef.current && !menuRef.current.contains(event.target)) {\n      setIsMenuOpen(false);\n    }\n  };\n  useEffect(() => {\n    // Attach event listener to handle clicks outside of the menu\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => {\n      // Clean up by removing the event listener on component unmount\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, [isMenuOpen]); // Re-run effect whenever isMenuOpen changes\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"menu-button\",\n      onClick: toggleMenu,\n      children: \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-screen\",\n      ref: menuRef,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"2owGd8a9N9o/35rXnS7o7S5+7ak=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Navbar","_s","isMenuOpen","setIsMenuOpen","menuRef","toggleMenu","handleOutsideClick","event","current","contains","target","document","addEventListener","removeEventListener","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/phamdoanphuonganh/Desktop/DHLab/dhlab-web/src/frontend/navbar/navbar.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './navbar.css';\n\nconst Navbar = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const menuRef = useRef(null);\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const handleOutsideClick = (event) => {\n    // Close the menu if it's open and the click is outside of the menu\n    if (isMenuOpen && menuRef.current && !menuRef.current.contains(event.target)) {\n      setIsMenuOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    // Attach event listener to handle clicks outside of the menu\n    document.addEventListener('mousedown', handleOutsideClick);\n\n    return () => {\n      // Clean up by removing the event listener on component unmount\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, [isMenuOpen]); // Re-run effect whenever isMenuOpen changes\n\n  return (\n    <nav className=\"navbar\">\n      <button className=\"menu-button\" onClick={toggleMenu}>\n        Menu\n      </button>\n      {isMenuOpen && (\n        <div className=\"menu-screen\" ref={menuRef}>\n          <ul>\n            <li>Home</li>\n            <li>About</li>\n            <li>Services</li>\n            <li>Contact</li>\n          </ul>\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMS,OAAO,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBF,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IACpC;IACA,IAAIL,UAAU,IAAIE,OAAO,CAACI,OAAO,IAAI,CAACJ,OAAO,CAACI,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;MAC5EP,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd;IACAc,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAE1D,OAAO,MAAM;MACX;MACAK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,oBACEH,OAAA;IAAKe,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBhB,OAAA;MAAQe,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEX,UAAW;MAAAU,QAAA,EAAC;IAErD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRlB,UAAU,iBACTH,OAAA;MAAKe,SAAS,EAAC,aAAa;MAACO,GAAG,EAAEjB,OAAQ;MAAAW,QAAA,eACxChB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAI;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbrB,OAAA;UAAAgB,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdrB,OAAA;UAAAgB,QAAA,EAAI;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBrB,OAAA;UAAAgB,QAAA,EAAI;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1CID,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AA4CZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}