{"ast":null,"code":"var _jsxFileName = \"/Users/phamdoanphuonganh/Desktop/DHLab/dhlab-web/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport './App.css'; //stylesheet\nimport Navbar from './frontend/navbar/navbar';\nimport WhoAreWe from './frontend/whoarewe/whoarewe';\nimport Archives from './frontend/archives/archives';\nimport HomePage from './frontend/homepage/homepage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  MongoClient,\n  ServerApiVersion\n} = require('mongodb');\nconst uri = \"mongodb+srv://pdpawork:OppAKGAj12Vl6E7m@dhweb.ecqj88o.mongodb.net/?retryWrites=true&w=majority&appName=DHWeb\";\n// Create a MongoClient with a MongoClientOptions object to set the Stable API version\nconst client = new MongoClient(uri, {\n  serverApi: {\n    version: ServerApiVersion.v1,\n    strict: true,\n    deprecationErrors: true\n  }\n});\nasync function run() {\n  try {\n    // Connect the client to the server\t(optional starting in v4.7)\n    await client.connect();\n    // Send a ping to confirm a successful connection\n    await client.db(\"admin\").command({\n      ping: 1\n    });\n    console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n  } finally {\n    // Ensures that the client will close when you finish/error\n    await client.close();\n  }\n}\nrun().catch(console.dir);\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/whoarewe\",\n          element: /*#__PURE__*/_jsxDEV(WhoAreWe, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/archives\",\n          element: /*#__PURE__*/_jsxDEV(Archives, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Routes","Route","Navbar","WhoAreWe","Archives","HomePage","jsxDEV","_jsxDEV","MongoClient","ServerApiVersion","require","uri","client","serverApi","version","v1","strict","deprecationErrors","run","connect","db","command","ping","console","log","close","catch","dir","App","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/phamdoanphuonganh/Desktop/DHLab/dhlab-web/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport './App.css'; //stylesheet\nimport Navbar from './frontend/navbar/navbar';\nimport WhoAreWe from './frontend/whoarewe/whoarewe';\nimport Archives from './frontend/archives/archives';\nimport HomePage from './frontend/homepage/homepage';\n\nconst { MongoClient, ServerApiVersion } = require('mongodb');\nconst uri = \"mongodb+srv://pdpawork:OppAKGAj12Vl6E7m@dhweb.ecqj88o.mongodb.net/?retryWrites=true&w=majority&appName=DHWeb\";\n// Create a MongoClient with a MongoClientOptions object to set the Stable API version\nconst client = new MongoClient(uri, {\n  serverApi: {\n    version: ServerApiVersion.v1,\n    strict: true,\n    deprecationErrors: true,\n  }\n});\nasync function run() {\n  try {\n    // Connect the client to the server\t(optional starting in v4.7)\n    await client.connect();\n    // Send a ping to confirm a successful connection\n    await client.db(\"admin\").command({ ping: 1 });\n    console.log(\"Pinged your deployment. You successfully connected to MongoDB!\");\n  } finally {\n    // Ensures that the client will close when you finish/error\n    await client.close();\n  }\n}\nrun().catch(console.dir);\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/whoarewe\" element={<WhoAreWe />} />\n          <Route path=\"/archives\" element={<Archives />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAO,WAAW,CAAC,CAAC;AACpB,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;AACnD,OAAOC,QAAQ,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAM;EAAEC,WAAW;EAAEC;AAAiB,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC5D,MAAMC,GAAG,GAAG,8GAA8G;AAC1H;AACA,MAAMC,MAAM,GAAG,IAAIJ,WAAW,CAACG,GAAG,EAAE;EAClCE,SAAS,EAAE;IACTC,OAAO,EAAEL,gBAAgB,CAACM,EAAE;IAC5BC,MAAM,EAAE,IAAI;IACZC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AACF,eAAeC,GAAGA,CAAA,EAAG;EACnB,IAAI;IACF;IACA,MAAMN,MAAM,CAACO,OAAO,CAAC,CAAC;IACtB;IACA,MAAMP,MAAM,CAACQ,EAAE,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC;MAAEC,IAAI,EAAE;IAAE,CAAC,CAAC;IAC7CC,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;EAC/E,CAAC,SAAS;IACR;IACA,MAAMZ,MAAM,CAACa,KAAK,CAAC,CAAC;EACtB;AACF;AACAP,GAAG,CAAC,CAAC,CAACQ,KAAK,CAACH,OAAO,CAACI,GAAG,CAAC;AACxB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACErB,OAAA,CAACR,aAAa;IAAA8B,QAAA,eACZtB,OAAA;MAAKuB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBtB,OAAA,CAACL,MAAM;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV3B,OAAA,CAACP,MAAM;QAAA6B,QAAA,gBACLtB,OAAA,CAACN,KAAK;UAACkC,IAAI,EAAC,GAAG;UAACC,OAAO,eAAE7B,OAAA,CAACF,QAAQ;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzC3B,OAAA,CAACN,KAAK;UAACkC,IAAI,EAAC,WAAW;UAACC,OAAO,eAAE7B,OAAA,CAACJ,QAAQ;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjD3B,OAAA,CAACN,KAAK;UAACkC,IAAI,EAAC,WAAW;UAACC,OAAO,eAAE7B,OAAA,CAACH,QAAQ;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB,CAAC;AAACG,EAAA,GAbIT,GAAG;AAeT,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}