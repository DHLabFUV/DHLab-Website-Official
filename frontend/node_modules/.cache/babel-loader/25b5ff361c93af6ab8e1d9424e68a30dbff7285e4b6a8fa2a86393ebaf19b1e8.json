{"ast":null,"code":"var _jsxFileName = \"/Users/phamdoanphuonganh/Desktop/DHLab/dhlab-web/src/frontend/archives/togglelist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './togglelist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleList = ({\n  items\n}) => {\n  _s();\n  const [openItem, setOpenItem] = useState(null);\n\n  // Function to toggle the open state of an item\n  const toggleItem = itemId => {\n    if (openItem === itemId) {\n      // If clicked item is already open, close it\n      setOpenItem(null);\n    } else {\n      // Otherwise, open the clicked item\n      setOpenItem(itemId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => toggleItem(item.id),\n        className: openItem === item.id ? 'active' : '',\n        children: [item.title, openItem === item.id && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"additional-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.imageUrl,\n            alt: \"Additional\",\n            className: \"image-item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 38\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ToggleList, \"Zmrt7SMlj4FSCEzRBFkAgHFvdlM=\");\n_c = ToggleList;\nexport default ToggleList;\nvar _c;\n$RefreshReg$(_c, \"ToggleList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToggleList","items","_s","openItem","setOpenItem","toggleItem","itemId","className","children","map","item","onClick","id","title","content","fileName","_jsxFileName","lineNumber","columnNumber","src","imageUrl","alt","_c","$RefreshReg$"],"sources":["/Users/phamdoanphuonganh/Desktop/DHLab/dhlab-web/src/frontend/archives/togglelist.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './togglelist.css';\n\nconst ToggleList = ({ items }) => {\n  const [openItem, setOpenItem] = useState(null);\n\n  // Function to toggle the open state of an item\n  const toggleItem = (itemId) => {\n    if (openItem === itemId) {\n      // If clicked item is already open, close it\n      setOpenItem(null);\n    } else {\n      // Otherwise, open the clicked item\n      setOpenItem(itemId);\n    }\n  };\n\n  return (\n    <div className=\"toggle-list\">\n      <ul>\n        {items.map((item) => (\n          <li\n            key={item.id}\n            onClick={() => toggleItem(item.id)}\n            className={openItem === item.id ? 'active' : ''}\n          >\n            {item.title}\n            {openItem === item.id && <p className=\"additional-content\">\n                <p>{item.content}</p>\n                <img src={item.imageUrl} alt=\"Additional\" className='image-item' />\n            </p>}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ToggleList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMQ,UAAU,GAAIC,MAAM,IAAK;IAC7B,IAAIH,QAAQ,KAAKG,MAAM,EAAE;MACvB;MACAF,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM;MACL;MACAA,WAAW,CAACE,MAAM,CAAC;IACrB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1BT,OAAA;MAAAS,QAAA,EACGP,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBACdX,OAAA;QAEEY,OAAO,EAAEA,CAAA,KAAMN,UAAU,CAACK,IAAI,CAACE,EAAE,CAAE;QACnCL,SAAS,EAAEJ,QAAQ,KAAKO,IAAI,CAACE,EAAE,GAAG,QAAQ,GAAG,EAAG;QAAAJ,QAAA,GAE/CE,IAAI,CAACG,KAAK,EACVV,QAAQ,KAAKO,IAAI,CAACE,EAAE,iBAAIb,OAAA;UAAGQ,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBACtDT,OAAA;YAAAS,QAAA,EAAIE,IAAI,CAACI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBnB,OAAA;YAAKoB,GAAG,EAAET,IAAI,CAACU,QAAS;YAACC,GAAG,EAAC,YAAY;YAACd,SAAS,EAAC;UAAY;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA,GARCR,IAAI,CAACE,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CAjCIF,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}